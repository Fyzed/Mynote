

一、什么是闭包？

	1、函数里面嵌套函数，内部函数可以引用外部函数的变量和参数，参数和变量不会被垃圾回收机制收回

		 

二、闭包有什么好处？应用在哪里？

	1、希望一个变量长期驻扎在内存当中

	2、避免全局变量的污染

	3、把函数和变量变成私有成员的存在（私有方法）


	垃圾回收机制例子：

	function aa(){

	  var a=1;
	
	  a++;

	  alert(a);

	}
	aa();//2

	aa();//2

	为什么两次都会弹出2，这就是垃圾回收机制的问题了 每一次函数执行完之后，里面的变量都会被回收，

	所以里面的变量都已经不存在了，所以当你再次调用的时候 它又会重新生成的


	如果把一个函数声明放在括号里面的话，就会变成一个函数块，再加一个括号就会变成自执行函数了


	（function（）{alert（1）}
）（）;


三、闭包的用法：

	1、模块化代码

	2、在循环中可以直接找到对应元素的索引

	for(var i=0;i<lis.lenght;i++){

		lis[i].onclick = funciton(){
			
			alert(i);
		}

	} 

	//这个循环打印出来的i恒等于最大值


	闭包写法一：

		for(var i=0;i<lis.lenght;i++){

			(function(i){
			
				lis[i].onclick = funciton(){
			
					alert(i);
				}

			})(i);
		

		}


	闭包写法二：

		for(var i =0;i<lis.length;i++){

			lis[i].onclick = (function(i){

				return function(){
					
					alert(i);

				}

			})(i);

		}









	